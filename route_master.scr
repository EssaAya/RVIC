!#/bin/bash

# This scrip will run all routing programs required to prepare the routing model
# for use with the RASM VIC model.  The steps are as follows:
#
#STEPS 1-5 ONLY NEED TO BE DONE ONCE
#
# 1.  Convert the DRT (Wu et al., 2012) flow direction files to VIC flow direction
#     format.  
#     Script used:  flowd_DRT2VIC.py
# 2.  Create Flow Velocity File
#     Script used:  velo.awk
# 3.  Create Flow Diffusion File
#     Script used:  diff.awk
# 4.  Create Xmask File
#     Script used:  create_xmask.c

# split script here (i.e. make steps 1-4 a pre-processing script and 5-9 a batch python script)

# 5.  Create fractional area grid from the same files.  For now we're just using a
#     grid of ones.
#     Script used:  dummyfract_DRT2VIC.py
#
#STEPS 6-9 NEED TO BE REPEATED FOR EXECUTED FOR EVERY STATION
#
# 6.  Create the uh_s files on the Lat/Lon grid using the modified routing program
#     based on Lohmann et al., 1996.  
#     Script used:  rout_rasm_uhs.c
# 7.  Reformat the output of the uh_s files into columns with lat/lon headers.
#     Script used:  uhs2col.scr
# 8.  Put the reformated uhs files into a netcdf grid file
#     Script used:  uhs2netcdf.py
# 9.  Regrid the uhs.nc files using the CDO 1st order conservative mapping functions
#     Script used: rasm_genweights.scr and/or rasm_remap.scr
#
####################################################################################

# Setup paths and input variables
runpath=.
DRT_flowD=$runpath/inputs/DRT_16th_FDR_globe.asc 
VIC_flowD=$runpath/inputs/DRT_16th_FDR_globe_vic.asc
VIC_velo=$runpath/inputs/DRT_16th_velo_globe.asc
VIC_diff=$runpath/inputs/DRT_16th_diff_globe.asc
VIC_frac=$runpath/inputs/DRT_16th_dummyfrac_globe_vic.asc
uhs_path=$runpath/uh_s_files/
nc_outpath=$runpath/nc_out

rout_input_file=$runpath/input.uhs.arctic
rout_sta_file=$runpath/stnloc.arctic

input_res=16th
input_res_num = 0.0625
NODATA_Val=-9999

echo "running master RASM routing script"
##################################
# 1.  Flow direction to VIC Format
##################################
if [ -f $VIC_flowD ];
then
	echo "File $VIC_flowD exists, skipping step 1"
else
	echo "File$VIC_flowD does not exist.\n"
	echo "running flow direction script (step 1/9)"

	python flowd_DRT2VIC.py $DRT_flowD $VIC_flowD $NODATA_Val $input_res 

	echo "completed flow direction step (step 1/9)"
fi
##################################
# 2.  Flow Velocity File  
##################################
if [ -f $VIC_velo ];
then
	echo "File $VIC_velo exists, skipping step 2"
else
	echo "File$VIC_velo does not exist.\n"
	echo "running flow velocity script (step 2/9)"

	awk -f velo.awk $VIC_flowD > $VIC_velo

	echo "completed flow velocity step (step 2/9)"
fi
##################################
# 3.  Flow Diffusion File
##################################
if [ -f $VIC_diff ];
then
	echo "File $VIC_diff exists, skipping step 3"
else
	echo "File$VIC_diff does not exist.\n"
	echo "running flow diffusion script (step 3/9)"
	
	awk -f diff.awk $DRT_flowD > $VIC_diff
	
	echo "completed flow diffusion step (step 3/9)"
fi
##################################
# 4.  Xmask File
##################################
if [ -f $VIC_xmask ];
then
	echo "File $VIC_xmask exists, skipping step 4"
else
	echo "File$VIC_xmask does not exist.\n"
	echo "running flow distance (xmask) script (step 4/9)"

	gcc -o create_xmask create_xmask.c -lm	   
        create_xmask $DRT_flowD "xmask file"

	echo "completed flow distance (xmask) step (step 4/9)"
fi

################################## 
# 5.  Fractional Area Grid 
################################## 
if [ -f $VIC_frac ];
then
	echo "File $VIC_frac exists, skipping step 1"
else
	echo "File$VIC_frac does not exist.\n"
	echo "running fractional area script (step 5/9)"

	python dummyfract_DRT2VIC.py $DRT_flowD $VIC_flowD $NODATA_Val $input_res

	echo "completed fractional area step (step 5/9)"
fi
##################################  
# 6.  Make uhs files  
##################################  
echo "running routing program (step 6/9)"

gcc -Wall rout_rasm_uhs.c -lm -o rout_rasm_uhs
./rout_rasm_uhs $rout_input_file
mv *.uh_s $uhs_path	#would be cleaner if c program wrote directly to this path

echo "completed routing program (step 6/9)"
##################################   
# 7.  uh-s files to columns   
##################################
echo "running uhs2col program (step 7/9)"

./uhs2col.scr $input_res_num $

echo "completed uhs2col program (step 7/9)"
##################################    
# 8.  Put the uh_s file into a netcdf  
################################## 
echo "running uhs2netcdf program (step 8/9)" 

python uhs2netcdf.py #invars

echo "completed uhs2netcdf program (step 8/9)"
##################################    
# 9.  Regrid the uhs.nc files    
################################## 
echo "running the regrid script (step 9/9)"

# regrid script

echo "completed regridding program (step 9/9)"
##################################
echo "completed the RASM routing program"
